/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufpe.cin.chat.view;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;

import br.ufpe.cin.chat.controle.Atualizador;
import br.ufpe.cin.chat.controle.EmissorCliente;
import br.ufpe.cin.chat.controle.FileReceiver;
import br.ufpe.cin.chat.controle.ReceptorCliente;
import br.ufpe.cin.chat.dados.ACK;
import br.ufpe.cin.chat.dados.Autenticador;
import br.ufpe.cin.chat.dados.Cliente;
import javax.swing.JProgressBar;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.JLabel;
import java.awt.Color;

/**
 *
 * @author Adilson
 */
public class FramePrincipal extends javax.swing.JFrame {

	private Socket socket;
	private Cliente cliente;
	private ObjectInputStream entradaObjetos;
	private ObjectOutputStream saidaObjetos;
	private ObjectInputStream entradaArquivos;
	private ObjectOutputStream saidaArquivos;
	private static final long serialVersionUID = -1413926017169968935L;

	public FramePrincipal(Socket socket, Cliente cliente, ObjectInputStream entradaObjetos, ObjectOutputStream saidaObjetos,
			ObjectOutputStream saidaArquivos, ObjectInputStream entradaArquivos) {
		super(cliente.getSelfUser().getLogin());
		setResizable(false);
		this.socket = socket;
		this.cliente = cliente;
		this.entradaObjetos = entradaObjetos;
		this.saidaObjetos = saidaObjetos;
		this.entradaArquivos = entradaArquivos;
		this.saidaArquivos = saidaArquivos;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		nomeUsuario = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jList1 = new javax.swing.JList<>();
		jList1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent event) {
				JList<String> list = (JList<String>)event.getSource();
				if (event.getClickCount() == 2) {
					if ((String) list.getSelectedValue() != null){
						cliente.iniciarConversa((String) list.getSelectedValue());
					}
				}
			}
		});
		botaoConversa = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		getContentPane().setLayout(new java.awt.GridBagLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.ipadx = 79;
		gridBagConstraints.ipady = 26;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new Insets(11, 10, 5, 5);
		getContentPane().add(nomeUsuario, gridBagConstraints);
		
		lblDownloads = new JLabel("Downloads");
		GridBagConstraints gbc_lblDownloads = new GridBagConstraints();
		gbc_lblDownloads.insets = new Insets(0, 0, 5, 5);
		gbc_lblDownloads.gridx = 2;
		gbc_lblDownloads.gridy = 0;
		getContentPane().add(lblDownloads, gbc_lblDownloads);
		
		progressoDownload = new JProgressBar();
		progressoDownload.setForeground(Color.MAGENTA);
		GridBagConstraints gbc_progressoDownload = new GridBagConstraints();
		gbc_progressoDownload.insets = new Insets(0, 0, 5, 0);
		gbc_progressoDownload.gridx = 3;
		gbc_progressoDownload.gridy = 0;
		getContentPane().add(progressoDownload, gbc_progressoDownload);

		jList1.setSelectionBackground(new java.awt.Color(204, 51, 255));
		jScrollPane1.setViewportView(jList1);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.ipadx = 417;
		gridBagConstraints.ipady = 313;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new Insets(6, 10, 5, 10);
		getContentPane().add(jScrollPane1, gridBagConstraints);

		botaoConversa.setText("Iniciar conversa");
		botaoConversa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				botaoConversaActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.ipadx = 100;
		gridBagConstraints.ipady = 15;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(6, 152, 11, 10);
		getContentPane().add(botaoConversa, gridBagConstraints);

		pack();
		(new Thread(new Atualizador(cliente, jList1))).start();
		initThreads();
		cliente.setFrame(this);
	}// </editor-fold>                        

	private void botaoConversaActionPerformed(java.awt.event.ActionEvent evt) {                                              
		JFileChooser chooser = new JFileChooser();
		int retorno = chooser.showDialog(this, "Escolha o arquivo");
		if (retorno == JFileChooser.APPROVE_OPTION){
			File file = chooser.getSelectedFile();
			//(new Thread(new FileSender(cliente, null, file, null))).start();
		}
		/*if ((String) jList1.getSelectedValue() != null){
			cliente.iniciarConversa((String) jList1.getSelectedValue());
		}*/
	}                                             

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new FramePrincipal(null, null, null, null, null, null).setVisible(true);
			}
		});
	}

	private void initThreads(){
		(new Thread(new EmissorCliente(cliente, saidaObjetos))).start();
		(new Thread(new ReceptorCliente(cliente, entradaObjetos))).start();
		(new Thread(new FileReceiver(cliente, entradaArquivos, progressoDownload))).start();
	}

	public void atualizaConexao(Socket socket) {
		try{
			this.socket = socket;
			ObjectOutputStream saida = new ObjectOutputStream(socket.getOutputStream());
			ObjectInputStream entrada = new ObjectInputStream(socket.getInputStream());
			Autenticador autenticador = new Autenticador(cliente.getSelfUser().getLogin(), cliente.getSelfUser().getSenha(), cliente.getSelfUser().getIP());
			saida.writeObject(autenticador);
			ACK ack = (ACK) entrada.readObject();
			if (ack.getTipo() == 3){
				JOptionPane.showMessageDialog(this, "Reconectado ao servidor com sucesso");
				this.entradaObjetos = entrada;
				this.saidaObjetos = saida;
				initThreads();
			}
			else{
				JOptionPane.showMessageDialog(this, "Erro fatal (Usuario já conectado)");
				System.exit(0);
			}
		}
		catch(IOException e){
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	public ObjectInputStream getEntradaArquivos() {
		return entradaArquivos;
	}

	public void setEntradaArquivos(ObjectInputStream entradaArquivos) {
		this.entradaArquivos = entradaArquivos;
	}

	public ObjectOutputStream getSaidaArquivos() {
		return saidaArquivos;
	}

	public void setSaidaArquivos(ObjectOutputStream saidaArquivos) {
		this.saidaArquivos = saidaArquivos;
	}

	// Variables declaration - do not modify                     
	private javax.swing.JButton botaoConversa;
	private javax.swing.JList<String> jList1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel nomeUsuario;
	private JProgressBar progressoDownload;
	private JLabel lblDownloads;
	// End of variables declaration                   
}
